name: Publish Release

on:
  push:
    tags:
      - 'v*'          # trigger on version tags like v1.0.0
    branches: '*'
  workflow_dispatch:   # manual trigger available

env:
  APP_NAME: "CallSort"

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build changelog
        id: build_changelog
        run: |
          PREV_TAG=$(git tag --list 'v*' | tail -n2 | head -n1)
          echo "changelog=$(git log $PREV_TAG...${{ github.ref_name }} --pretty=format:'- %s')" >> $GITHUB_OUTPUT
    outputs:
      changelog: ${{ steps.build_changelog.outputs.changelog }}

  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'  # Arm based macs (M1+)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'  # Intel based macs
            args: '--target x86_64-apple-darwin'
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    needs: [changelog]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: npm

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: npm install

      - name: CI Build (frontend + backend)
        if: ${{ github.ref_type == 'branch' }}
        run: npm run build

      - name: Upload Windows artifacts
        if: ${{ github.ref_type == 'branch' && matrix.platform == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Windows Installers'
          path: |
            src-tauri/release/bundle/msi/*.msi
            src-tauri/release/bundle/nsis/*.exe

      - name: Upload macOS artifact
        if: ${{ github.ref_type == 'branch' && matrix.platform == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'macOS Installer'
          path: src-tauri/release/bundle/dmg/*.dmg

      - name: Build Tauri app and publish release
        uses: tauri-apps/tauri-action@v0
        if: ${{ github.ref_type == 'tag' }}
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "${{ env.APP_NAME }} v__VERSION__"
          releaseBody: |
            ${{ needs.changelog.outputs.changelog }}
            See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
